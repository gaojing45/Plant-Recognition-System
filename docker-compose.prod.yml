version: '3.8'

services:
  # 植物识别API服务
  plantid-api:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    container_name: plantid-api-prod
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./plantid/models:/app/plantid/models:ro
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - MAX_UPLOAD_SIZE=16M
      - ENABLE_CACHE=true
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    networks:
      - plantid-network
    depends_on:
      - redis

  # 植物识别Web服务
  plantid-web:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    container_name: plantid-web-prod
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./plantid/models:/app/plantid/models:ro
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - API_BASE_URL=http://plantid-api:8000
    command: ["python", "web_app.py"]
    restart: unless-stopped
    depends_on:
      - plantid-api
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: plantid-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - plantid-api
      - plantid-web
    restart: unless-stopped
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Redis缓存
  redis:
    image: redis:alpine
    container_name: plantid-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: plantid-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Grafana监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: plantid-grafana-prod
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # 日志收集服务
  fluentd:
    image: fluent/fluentd:v1.14-1
    container_name: plantid-fluentd-prod
    volumes:
      - ./logs:/fluentd/log
      - ./monitoring/fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
    environment:
      - FLUENTD_CONF=fluent.conf
    restart: unless-stopped
    networks:
      - plantid-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  plantid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 